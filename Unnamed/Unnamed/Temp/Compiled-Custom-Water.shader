// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Custom/Water" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _HeightMap ("Height Map", 2D) = "" { }
}
SubShader { 
 LOD 100
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //        d3d11: 10 math
 Pass {
  Tags { "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d11":
// Stats: 10 math, 2 temp registers
Uses vertex data channel "TexCoord"
Uses vertex data channel "Vertex"

Set 2D Texture "_HeightMap" to slot 0

Constant Buffer "$Globals" (64 bytes) on slot 0 {
  Vector4 _MainTex_ST at 32
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// POSITION                 0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[3], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input v1.xyz
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_temps 2
   0: mad o0.xy, v0.xyxx, cb0[2].xyxx, cb0[2].zwzz
   1: sample_l r0.xyzw, v0.xyxx, t0.xyzw, s0, l(0.000000)
   2: add r0.x, r0.y, v1.y
   3: mul r0.xyzw, r0.xxxx, cb1[1].xyzw
   4: mad r0.xyzw, cb1[0].xyzw, v1.xxxx, r0.xyzw
   5: mad r0.xyzw, cb1[2].xyzw, v1.zzzz, r0.xyzw
   6: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   7: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   8: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   9: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  10: mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  11: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Constant Buffer "$Globals" (64 bytes) on slot 0 {
  Vector4 _Color at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_output o0.xyzw
   0: mov o0.xyzw, cb0[3].xyzw
   1: ret 
// Approximately 0 instruction slots used


 }
}
}